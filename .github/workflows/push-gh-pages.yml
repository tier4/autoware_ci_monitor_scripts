name: Push to gh-pages

on:
  push:
    branches: main

jobs:
  generate-report:
    runs-on: ubuntu-latest
    container: osrf/ros:foxy-desktop

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true

      - name: Install dependencies
        run: |
          apt-get update
          apt-get install -y lcov git python3-pip
          rosdep update
          rosdep install -y --from-paths . --ignore-src --rosdistro foxy
          pip3 install jinja2 bs4

      - name: Set timestamp
        run: |
          date -u '+%Y%m%d_%H%M%S' > ${GITHUB_WORKSPACE}/timestamp.txt

      - name: Coverage
        run: ${GITHUB_WORKSPACE}/scripts/coverage.sh ${GITHUB_WORKSPACE} ${GITHUB_WORKSPACE}/timestamp.txt

      - name: Measure code metrics
        run: ${GITHUB_WORKSPACE}/scripts/lizard.sh ${GITHUB_WORKSPACE} ${GITHUB_WORKSPACE}/timestamp.txt

      - name: Scraping
        run: |
          TIMESTAMP=$(cat ${GITHUB_WORKSPACE}/timestamp.txt)
          mkdir -p ${GITHUB_WORKSPACE}/metrics/$TIMESTAMP
          python3 scripts/scraping.py --lcov_dir=${GITHUB_WORKSPACE}/lcov/$TIMESTAMP/ --lizard_dir=${GITHUB_WORKSPACE}/lizard_result/$TIMESTAMP/ --output_dir=${GITHUB_WORKSPACE}/metrics/$TIMESTAMP/

      - name: Gathering artifacts
        run: |
          mkdir public/
          mv lcov/ public/
          mv lizard_result/ public/
          mv metrics/ public/
          TIMESTAMP=$(cat ${GITHUB_WORKSPACE}/timestamp.txt)
          ln -nfrs public/lcov/$TIMESTAMP public/lcov/latest
          ln -nfrs public/lizard_result/$TIMESTAMP public/lizard_result/latest
          ln -nfrs public/metrics/$TIMESTAMP public/metrics/latest

      - name: Deploy measurement result page to gh-pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./public
          keep_files: true

  generate-document:
    runs-on: ubuntu-latest
    needs: generate-report

    steps:
      - uses: actions/checkout@v2

      - uses: actions/checkout@v2
        with:
          ref: gh-pages
          path: doc

      - uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pandas plotly jinja2

      - name: Create static page
        run: python scripts/main.py --input-dir=${GITHUB_WORKSPACE}/doc/metrics/ --hugo-root-dir=${GITHUB_WORKSPACE}/example/hugo-site/ --hugo-template-dir=${GITHUB_WORKSPACE}/template/hugo/ --lcov-result-path=${GITHUB_WORKSPACE}/doc/lcov/latest/ --lizard-result-path=${GITHUB_WORKSPACE}/doc/lizard_result/latest/

      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v2
        with:
          hugo-version: '0.83.1'

      - name: Generate pages
        run: |
          cd example/hugo-site
          cp -r ${GITHUB_WORKSPACE}/doc/lcov/ .
          cp -r ${GITHUB_WORKSPACE}/doc/lizard_result/ .
          hugo -d ${GITHUB_WORKSPACE}/public

      - name: Deploy measurement result page to gh-pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./public
          keep_files: true
