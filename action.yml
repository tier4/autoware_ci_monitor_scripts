name: "Code quality visualizer"
author: "Keisuke Shima"
description: "Measure code metrics and generate result page"
branding:
  icon: "activity"
  color: "blue"

inputs:
  artifacts-dir:
    description: "Path to Artifacts generated using this Action (must include lcov-result/ and lizard-result/ directory)"
    required: true
  target-dir:
    description: "Path to source directory."
    required: true
    default: "${GITHUB_WORKSPACE}"
  base-url:
    description: "If you use example/hugo-site in this repository, please specify the baseURL."
    required: true
  title:
    description: "If you use example/hugo-site in this repository, please specify the title."
    required: true
  ros-distro:
    description: "ROS distribution"
    required: true
    default: "foxy"
  hugo-dir:
    description: "If you want to use your own hugo-site, specify the root directory"
    required: true
    default: "${GITHUB_ACTION_PATH}/example/hugo-site"
  output-dir:
    description: "Hugo output directory"
    required: true
    default: "${GITHUB_WORKSPACE}/public"
  lcovrc-path:
    description: "Path to .lcovrc file"
    required: true
    default: "${GITHUB_ACTION_PATH}/.lcovrc"
  CCN:
    description: "Threshold for cyclomatic complexity number warning. The default value is 15."
    required: true
    default: "15"
  CCN-recommendation:
    description: "Recommend value for cyclomatic complexity number warning. The default value is 5."
    required: true
    default: "5"
  nloc:
    description: "Threshold for NLOC. The default value is 1000000."
    required: true
    default: "1000000"
  nloc-recommendation:
    description: "Recommend value for NLOC. The default value is 1000."
    required: true
    default: "1000"
  arguments:
    description: "Limit for number of parameters. The default value is 100."
    required: true
    default: "100"
  arguments-recommendation:
    description: "Recommend value for number of parameters. The default value is 50."
    required: true
    default: "50"
  exclude:
    description: "Space separated list of exclude paths."
    required: false
  codechecker-config-path:
    description: "Path to codechecker-config.json file"
    required: false
  codechecker-skip-list:
    description: "Path to codechecker-skip-list"
    required: false

outputs:
  output-dir:
    description: "Hugo output directory"
    value: ${{ inputs.output-dir }}

runs:
  using: "composite"
  steps:
    - name: Filtering input
      id: filtered
      run: |
        echo ::set-output name=ARTIFACTS_DIR::$(echo ${{ inputs.artifacts-dir }} | sed -e "s@/\$@@")
        echo ::set-output name=HUGO_DIR::$(echo ${{ inputs.hugo-dir }} | sed -e "s@/\$@@")
        echo ::set-output name=OUTPUT_DIR::$(echo ${{ inputs.output-dir }} | sed -e "s@/\$@@")
      shell: bash

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y lcov git python-is-python3 python3-pip hugo
        sudo apt-get install -y clang-tidy-11
        sudo update-alternatives --install /usr/bin/clang-tidy clang-tidy /usr/bin/clang-tidy-11 9999
        sudo apt-get install -y gcc-multilib python3-venv
        pip3 install jinja2 bs4 pandas plotly
      shell: bash

    - name: Set timestamp
      run: |
        date -u '+%Y%m%d_%H%M%S' > ${GITHUB_WORKSPACE}/timestamp.txt
      shell: bash

    - name: Measure code quality index
      run: |
        echo "Artifacts directory is ${{ steps.filtered.outputs.ARTIFACTS_DIR }}"
        mkdir -p ${{ steps.filtered.outputs.ARTIFACTS_DIR }}
        TIMESTAMP=$(cat ${GITHUB_WORKSPACE}/timestamp.txt)
        CODECHECKER_CONFIG_PATH=${{ inputs.codechecker-config-path }}
        CODECHECKER_SKIP_LIST=${{ inputs.codechecker-skip-list }}
        CODECHECKER_CONFIG_PATH=${CODECHECKER_CONFIG_PATH:+$GITHUB_WORKSPACE"/"$CODECHECKER_CONFIG_PATH}
        CODECHECKER_CONFIG_PATH=${CODECHECKER_CONFIG_PATH:-$GITHUB_ACTION_PATH"/codechecker-config.json"}
        CODECHECKER_SKIP_LIST=${CODECHECKER_SKIP_LIST:+$GITHUB_WORKSPACE"/"$CODECHECKER_SKIP_LIST}
        CODECHECKER_SKIP_LIST=${CODECHECKER_SKIP_LIST:-$GITHUB_ACTION_PATH"/codechecker-skip-list.txt"}
        echo "Debug: CODECHECKER_CONFIG_PATH=$CODECHECKER_CONFIG_PATH"
        echo "Debug: CODECHECKER_SKIP_LIST=$CODECHECKER_SKIP_LIST"
        . /opt/ros/${{ inputs.ros-distro }}/setup.sh
        python ${GITHUB_ACTION_PATH}/scripts/ros_metrics_reporter.py \
          --base-dir=${{ inputs.target-dir }} \
          --action-dir=${GITHUB_ACTION_PATH} \
          --output-dir=${{ steps.filtered.outputs.ARTIFACTS_DIR }} \
          --timestamp=${TIMESTAMP} \
          --lcovrc=${{ inputs.lcovrc-path }} \
          --hugo-root-dir=${{ steps.filtered.outputs.HUGO_DIR }} \
          --base-url=${{ inputs.base-url }} \
          --title=${{ inputs.title }} \
          --exclude="${{ inputs.exclude }}" \
          --ccn=${{ inputs.CCN }} \
          --ccn-recommendation=${{ inputs.CCN-recommendation }} \
          --nloc=${{ inputs.nloc }} \
          --nloc-recommendation=${{ inputs.nloc-recommendation }} \
          --arguments=${{ inputs.arguments }} \
          --arguments-recommendation=${{ inputs.arguments-recommendation }} \
          --tidy-config-path=${CODECHECKER_CONFIG_PATH} \
          --tidy-ignore-path=${CODECHECKER_SKIP_LIST}
      shell: bash

    - name: Generate pages
      run: |
        cd ${{ steps.filtered.outputs.HUGO_DIR }} && hugo -d ${{ steps.filtered.outputs.OUTPUT_DIR }}
      shell: bash
