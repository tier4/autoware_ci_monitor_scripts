name: "Code quality visualizer"
author: "Keisuke Shima"
description: "Measure code metrics and generate result page"
branding:
  icon: "activity"
  color: "blue"

runs:
  using: "composite"
  steps:
    - run: |
        echo "GITHUB_ACTION_PATH is ${GITHUB_ACTION_PATH}"
        ls -l ${GITHUB_ACTION_PATH}
        echo "github.action_path is ${{ github.action_path }}"
        echo "GITHUB_WORKSPACE is ${GITHUB_WORKSPACE}"
        ls -l ${GITHUB_WORKSPACE}
        echo "Workspace is ${{ github.workspace }}"
        apt-get update
        apt-get install -y lcov git python3-pip hugo
        rosdep update
        rosdep install -y --from-paths . --ignore-src --rosdistro foxy
        pip3 install jinja2 bs4 pandas plotly
        echo "Creating timestamp to ${{ github.workspace }}/timestamp.txt"
        date -u '+%Y%m%d_%H%M%S' > ${{ github.workspace }}/timestamp.txt
        echo "Output directory is ${{ github.workspace }}/artifacts"
        mkdir ${{ github.workspace }}/artifacts
        echo "Run coverage.sh"
        ${GITHUB_ACTION_PATH}/scripts/coverage.sh ${{ github.workspace }} ${{ github.workspace }}/timestamp.txt && mv ${{ github.workspace }}/lcov ${{ github.workspace }}/artifacts/
        echo "Run lizard.sh"
        ${GITHUB_ACTION_PATH}/scripts/lizard.sh ${{ github.workspace }} ${{ github.workspace }}/timestamp.txt && mv ${{ github.workspace }}/lizard_result ${{ github.workspace }}/artifacts/
        TIMESTAMP=$(cat ${{ github.workspace }}/timestamp.txt)
        mkdir -p ${{ github.workspace }}/artifacts/metrics/$TIMESTAMP
        echo "Run scraping.py"
        python3 scripts/scraping.py --lcov_dir=${{ github.workspace }}/artifacts/lcov/$TIMESTAMP/ --lizard_dir=${{ github.workspace }}/artifacts/lizard_result/$TIMESTAMP/ --output_dir=${{ github.workspace }}/artifacts/metrics/$TIMESTAMP/
        ln -nfrs ${{ github.workspace }}/artifacts/lcov/$TIMESTAMP ${{ github.workspace }}/artifacts/lcov/latest
        ln -nfrs ${{ github.workspace }}/artifacts/lizard_result/$TIMESTAMP ${{ github.workspace }}/artifacts/lizard_result/latest
        ln -nfrs ${{ github.workspace }}/artifacts/metrics/$TIMESTAMP ${{ github.workspace }}/artifacts/metrics/latest
        echo "Run main.py"
        python scripts/main.py --input-dir=${{ github.workspace }}/artifacts/metrics/ --hugo-root-dir=${GITHUB_ACTION_PATH}/example/hugo-site/ --hugo-template-dir=${GITHUB_ACTION_PATH}/template/hugo/ --lcov-result-path=${{ github.workspace }}/artifacts/lcov/latest/ --lizard-result-path=${{ github.workspace }}/artifacts/lizard_result/latest/
        echo "Copy artifacts"
        cp -r ${{ github.workspace }}/artifacts/lcov/ ${GITHUB_ACTION_PATH}/example/hugo-site
        cp -r ${{ github.workspace }}/artifacts/lizard_result/ ${GITHUB_ACTION_PATH}/example/hugo-site
        cd ${GITHUB_ACTION_PATH}/example/hugo-site && hugo -d ${{ github.workspace }}/public
      shell: bash
